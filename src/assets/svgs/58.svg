<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">


<!-- Page 58 -->
<svg x="0" y="0" width="935" height="1210" viewBox="0 0 935 1210" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
style="display: block;margin-left: auto;margin-right: auto;">
<defs>

<style type="text/css"><![CDATA[

.g1_58{
fill: #D9D9D9;
}
.g2_58{
fill: #FFFFFF;
}

.s1_58{
font-size: 18.33px;
font-family: ArialNovaCond-Bold_d;
fill: #5A5A5A;
}
.s2_58{
font-size: 12.10px;
font-family: ArialNova-Light_n;
fill: #7F7F7F;
}
.s3_58{
font-size: 18.33px;
font-family: Calibri-Light_r;
fill: #44546A;
}
.s4_58{
font-size: 14.67px;
font-family: Calibri-Light_r;
fill: #44546A;
}
.s5_58{
font-size: 16.13px;
font-family: Consolas_c7;
fill: #0000FF;
}
.s6_58{
font-size: 16.13px;
font-family: Consolas_c7;
fill: #000000;
}
.s7_58{
font-size: 16.13px;
font-family: Consolas_c7;
fill: #A31515;
}
.s8_58{
font-size: 16.13px;
font-family: Consolas_c7;
fill: #800000;
}

]]></style>

</defs>
<path d="M0,0
L0,1210
L935,1210
L935,0 Z " 
fill="#FFFFFF" stroke="none" />
<text 
x="110" 
y="1106" 
dx="0,0,0,0.2" 
class="s1_58"
>58 |</text>

<text 
x="141" 
y="1106" 
dx="0,4.3,4.9,0,1.9,0,1.6,0,1.3,0,1.7,0,1.7,0,1.2,0,1.9,0,1.6,4.7,4.9,0,1.3,0,1.7,0,1.6,0,1.5,0,1.6,0,1.9,0,1.2,0,1.5,0,1.9,0,1.5,4.5,4.9,0,1.7,0,1.2,0,1.9,0,1.9,0,1.2,4.5,4.5,0,1.9,0,1.5,4.7,4.9,0,1.3,0,1.5,0,1.9,0,1.5,0,1.5,0,1.5,0,1.5,0,1.9,0,1.3,0,1.9,0,1.6,4.6,4.5,0,1.9,0,1.5,0,1.7,0,1.6,0,1.4,0,1.9,0,1.3,0,1.9,0,1.5,0,1.7,0,1.5,0,1.5,0,1.9" 
class="s2_58"
>A W e b - b a s e d T r a n s l a t i o n S y s t e m f o r M u l t i l i n g u a l C o d e - s w i t c h i n g</text>

<path d="M107.8,1086.4l719.4,0l0,-0.7l-719.4,0l0,0.7Z" class="g1_58" />
<text 
x="110" 
y="127" 
class="s3_58"
>F</text>

<text 
x="119" 
y="127" 
dx="0,1.6,1.6" 
class="s4_58"
>ILE</text>

<text 
x="141" 
y="127" 
class="s3_58"
>:</text>

<text 
x="152" 
y="127" 
dx="0,1.6,1.3" 
class="s4_58"
>APP</text>

<text 
x="180" 
y="127" 
class="s3_58"
>.</text>

<text 
x="185" 
y="127" 
dx="0,1.3,1.4,1.5,1.3,1.4,1.6,1.6,1.6" 
class="s4_58"
>COMPONENT</text>

<text 
x="279" 
y="127" 
class="s3_58"
>.</text>

<text 
x="284" 
y="127" 
dx="0,1.4,1.3,1.6" 
class="s4_58"
>SPEC</text>

<text 
x="319" 
y="127" 
class="s3_58"
>.</text>

<text 
x="325" 
y="127" 
dx="0,1.3" 
class="s4_58"
>TS</text>

<path d="M107.8,181.1l719.4,0l0,-18.7l-719.4,0l0,18.7Z" class="g2_58" />
<text 
x="110" 
y="177" 
dx="0,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1" 
class="s5_58"
>import </text>

<text 
x="171" 
y="177" 
dx="0,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1" 
class="s6_58"
>{ TestBed, async } </text>

<text 
x="338" 
y="177" 
dx="0,-0.1,-0.1,0.3,-0.1" 
class="s5_58"
>from </text>

<text 
x="383" 
y="177" 
dx="0,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,0.3,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1" 
class="s7_58"
>'@angular/core/testing'</text>

<text 
x="585" 
y="177" 
dx="0,0.3" 
class="s6_58"
>; </text>

<path d="M107.8,202.8l719.4,0l0,-21.7l-719.4,0l0,21.7Z" class="g2_58" />
<text 
x="110" 
y="198" 
dx="0,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1" 
class="s5_58"
>import </text>

<text 
x="171" 
y="198" 
dx="0,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1" 
class="s6_58"
>{ AppComponent } </text>

<text 
x="321" 
y="198" 
dx="0,-0.1,-0.1,-0.1,-0.1" 
class="s5_58"
>from </text>

<text 
x="365" 
y="198" 
dx="0,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,0.3,-0.1,-0.1,-0.1" 
class="s7_58"
>'./app.component'</text>

<text 
x="515" 
y="198" 
dx="0,-0.1" 
class="s6_58"
>; </text>

<path d="M107.8,224.8l719.4,0l0,-22l-719.4,0l0,22Z" class="g2_58" />
<text 
x="110" 
y="220" 
dx="0,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1" 
class="s6_58"
>describe(</text>

<text 
x="189" 
y="220" 
dx="0,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1" 
class="s7_58"
>'AppComponent'</text>

<text 
x="312" 
y="220" 
dx="0,-0.1,-0.1,-0.1,-0.1" 
class="s6_58"
>, () </text>

<text 
x="356" 
y="220" 
dx="0,0.3,-0.1" 
class="s5_58"
>=&gt; </text>

<text 
x="383" 
y="220" 
dx="0,0.3" 
class="s6_58"
>{ </text>

<path d="M107.8,246.4l719.4,0l0,-21.6l-719.4,0l0,21.6Z" class="g2_58" />
<text 
x="127" 
y="242" 
dx="0,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1" 
class="s6_58"
>beforeEach(async(() </text>

<text 
x="303" 
y="242" 
dx="0,-0.1,-0.1" 
class="s5_58"
>=&gt; </text>

<text 
x="330" 
y="242" 
dx="0,0.3" 
class="s6_58"
>{ </text>

<path d="M107.8,268l719.4,0l0,-21.6l-719.4,0l0,21.6Z" class="g2_58" />
<text 
x="145" 
y="263" 
dx="0,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,0.3,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,0.3" 
class="s6_58"
>TestBed.configureTestingModule({ </text>

<path d="M107.8,290l719.4,0l0,-22l-719.4,0l0,22Z" class="g2_58" />
<text 
x="162" 
y="285" 
dx="0,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,0.3" 
class="s6_58"
>declarations: [ </text>

<path d="M107.8,311.7l719.4,0l0,-21.7l-719.4,0l0,21.7Z" class="g2_58" />
<text 
x="180" 
y="307" 
dx="0,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,0.3" 
class="s6_58"
>AppComponent </text>

<path d="M107.8,333.7l719.4,0l0,-22l-719.4,0l0,22Z" class="g2_58" />
<text 
x="162" 
y="329" 
dx="0,-0.1,-0.1" 
class="s6_58"
>], </text>

<path d="M107.8,355.3l719.4,0l0,-21.6l-719.4,0l0,21.6Z" class="g2_58" />
<text 
x="145" 
y="351" 
dx="0,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,0.3" 
class="s6_58"
>}).compileComponents(); </text>

<path d="M107.8,376.9l719.4,0l0,-21.6l-719.4,0l0,21.6Z" class="g2_58" />
<text 
x="127" 
y="372" 
dx="0,-0.1,-0.1,-0.1,-0.1" 
class="s6_58"
>})); </text>

<path d="M107.8,398.9l719.4,0l0,-22l-719.4,0l0,22Z" class="g2_58" />
<text 
x="127" 
y="394" 
dx="0,-0.1,-0.1" 
class="s6_58"
>it(</text>

<text 
x="154" 
y="394" 
dx="0,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1" 
class="s7_58"
>'should create the app'</text>

<text 
x="356" 
y="394" 
dx="0,0.3,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1" 
class="s6_58"
>, async(() </text>

<text 
x="453" 
y="394" 
dx="0,-0.1,-0.1" 
class="s5_58"
>=&gt; </text>

<text 
x="480" 
y="394" 
dx="0,-0.1" 
class="s6_58"
>{ </text>

<path d="M107.8,420.6l719.4,0l0,-21.7l-719.4,0l0,21.7Z" class="g2_58" />
<text 
x="145" 
y="416" 
dx="0,-0.1,-0.1,-0.1,-0.1,-0.1" 
class="s5_58"
>const </text>

<text 
x="198" 
y="416" 
dx="0,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,0.3,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,0.3,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,0.3" 
class="s6_58"
>fixture = TestBed.createComponent(AppComponent); </text>

<path d="M107.8,442.2l719.4,0l0,-21.6l-719.4,0l0,21.6Z" class="g2_58" />
<text 
x="145" 
y="438" 
dx="0,-0.1,-0.1,-0.1,-0.1,-0.1" 
class="s5_58"
>const </text>

<text 
x="198" 
y="438" 
dx="0,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,0.3,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,0.3,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,0.3" 
class="s6_58"
>app = fixture.debugElement.componentInstance; </text>

<path d="M107.8,464.2l719.4,0l0,-22l-719.4,0l0,22Z" class="g2_58" />
<text 
x="145" 
y="459" 
dx="0,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,0.3" 
class="s6_58"
>expect(app).toBeTruthy(); </text>

<path d="M107.8,485.8l719.4,0l0,-21.6l-719.4,0l0,21.6Z" class="g2_58" />
<text 
x="127" 
y="481" 
dx="0,-0.1,-0.1,-0.1,-0.1" 
class="s6_58"
>})); </text>

<path d="M107.8,507.8l719.4,0l0,-22l-719.4,0l0,22Z" class="g2_58" />
<text 
x="127" 
y="503" 
dx="0,-0.1,-0.1" 
class="s6_58"
>it(</text>

<text 
x="154" 
y="503" 
dx="0,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,0.3,-0.1,-0.1,-0.1" 
class="s7_58"
>`should have as title 'app'`</text>

<text 
x="400" 
y="503" 
dx="0,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,0.3,-0.1" 
class="s6_58"
>, async(() </text>

<text 
x="497" 
y="503" 
dx="0,-0.1,-0.1" 
class="s5_58"
>=&gt; </text>

<text 
x="524" 
y="503" 
dx="0,-0.1" 
class="s6_58"
>{ </text>

<path d="M107.8,529.5l719.4,0l0,-21.7l-719.4,0l0,21.7Z" class="g2_58" />
<text 
x="145" 
y="525" 
dx="0,-0.1,-0.1,-0.1,-0.1,-0.1" 
class="s5_58"
>const </text>

<text 
x="198" 
y="525" 
dx="0,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,0.3,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,0.3,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,0.3" 
class="s6_58"
>fixture = TestBed.createComponent(AppComponent); </text>

<path d="M107.8,551.1l719.4,0l0,-21.6l-719.4,0l0,21.6Z" class="g2_58" />
<text 
x="145" 
y="547" 
dx="0,-0.1,-0.1,-0.1,-0.1,-0.1" 
class="s5_58"
>const </text>

<text 
x="198" 
y="547" 
dx="0,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,0.3,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,0.3,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,0.3" 
class="s6_58"
>app = fixture.debugElement.componentInstance; </text>

<path d="M107.8,573.1l719.4,0l0,-22l-719.4,0l0,22Z" class="g2_58" />
<text 
x="145" 
y="568" 
dx="0,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,0.3" 
class="s6_58"
>expect(app.title).toEqual(</text>

<text 
x="374" 
y="568" 
dx="0,-0.1,-0.1,-0.1,-0.1" 
class="s7_58"
>'app'</text>

<text 
x="418" 
y="568" 
dx="0,-0.1,0.3" 
class="s6_58"
>); </text>

<path d="M107.8,594.7l719.4,0l0,-21.6l-719.4,0l0,21.6Z" class="g2_58" />
<text 
x="127" 
y="590" 
dx="0,-0.1,-0.1,-0.1,-0.1" 
class="s6_58"
>})); </text>

<path d="M107.8,616.4l719.4,0l0,-21.7l-719.4,0l0,21.7Z" class="g2_58" />
<text 
x="127" 
y="612" 
dx="0,-0.1,-0.1" 
class="s6_58"
>it(</text>

<text 
x="154" 
y="612" 
dx="0,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,0.3,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1" 
class="s7_58"
>'should render title in a h1 tag'</text>

<text 
x="444" 
y="612" 
dx="0,-0.1,-0.1,-0.1,0.3,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1" 
class="s6_58"
>, async(() </text>

<text 
x="541" 
y="612" 
dx="0,-0.1,-0.1" 
class="s5_58"
>=&gt; </text>

<text 
x="568" 
y="612" 
dx="0,0.3" 
class="s6_58"
>{ </text>

<path d="M107.8,638.4l719.4,0l0,-22l-719.4,0l0,22Z" class="g2_58" />
<text 
x="145" 
y="633" 
dx="0,-0.1,-0.1,-0.1,-0.1,-0.1" 
class="s5_58"
>const </text>

<text 
x="198" 
y="633" 
dx="0,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,0.3,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,0.3,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,0.3" 
class="s6_58"
>fixture = TestBed.createComponent(AppComponent); </text>

<path d="M107.8,660l719.4,0l0,-21.6l-719.4,0l0,21.6Z" class="g2_58" />
<text 
x="145" 
y="655" 
dx="0,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,0.3" 
class="s6_58"
>fixture.detectChanges(); </text>

<path d="M107.8,682l719.4,0l0,-22l-719.4,0l0,22Z" class="g2_58" />
<text 
x="145" 
y="677" 
dx="0,-0.1,-0.1,-0.1,-0.1,-0.1" 
class="s5_58"
>const </text>

<text 
x="198" 
y="677" 
dx="0,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,0.3,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,0.3,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,0.3" 
class="s6_58"
>compiled = fixture.debugElement.nativeElement; </text>

<path d="M107.8,703.6l719.4,0l0,-21.6l-719.4,0l0,21.6Z" class="g2_58" />
<text 
x="145" 
y="699" 
dx="0,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,0.3,-0.1,-0.1,-0.1,-0.1" 
class="s6_58"
>expect(compiled.querySelector(</text>

<text 
x="409" 
y="699" 
dx="0,-0.1,-0.1,-0.1" 
class="s7_58"
>'h1'</text>

<text 
x="444" 
y="699" 
dx="0,-0.1,-0.1,-0.1,0.3,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1" 
class="s6_58"
>).textContent).toContain(</text>

<text 
x="665" 
y="699" 
dx="0,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,0.3,-0.1,-0.1,-0.1" 
class="s7_58"
>'Welcome to </text>

<path d="M107.8,725.3l719.4,0l0,-21.7l-719.4,0l0,21.7Z" class="g2_58" />
<text 
x="110" 
y="721" 
dx="0,-0.1,-0.1,-0.1,-0.1" 
class="s7_58"
>app!'</text>

<text 
x="154" 
y="721" 
dx="0,-0.1,-0.1" 
class="s6_58"
>); </text>

<path d="M107.8,747.3l719.4,0l0,-22l-719.4,0l0,22Z" class="g2_58" />
<text 
x="127" 
y="742" 
dx="0,-0.1,-0.1,-0.1,-0.1" 
class="s6_58"
>})); </text>

<path d="M107.8,768.9l719.4,0l0,-21.6l-719.4,0l0,21.6Z" class="g2_58" />
<text 
x="110" 
y="764" 
dx="0,-0.1,-0.1,-0.1" 
class="s6_58"
>}); </text>

<text 
x="110" 
y="859" 
class="s3_58"
>F</text>

<text 
x="119" 
y="859" 
dx="0,1.6,1.6" 
class="s4_58"
>ILE</text>

<text 
x="141" 
y="859" 
class="s3_58"
>:</text>

<text 
x="152" 
y="859" 
dx="0,1.6,1.3" 
class="s4_58"
>APP</text>

<text 
x="180" 
y="859" 
class="s3_58"
>.</text>

<text 
x="185" 
y="859" 
dx="0,1.3,1.4,1.5,1.3,1.4,1.6,1.6,1.6" 
class="s4_58"
>COMPONENT</text>

<text 
x="279" 
y="859" 
class="s3_58"
>.</text>

<text 
x="284" 
y="859" 
dx="0,1.6,1.3,1.5" 
class="s4_58"
>HTML</text>

<path d="M107.8,890.3l719.4,0l0,-18.7l-719.4,0l0,18.7Z" class="g2_58" />
<text 
x="110" 
y="886" 
dx="0,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,-0.1,0.3" 
class="s8_58"
>&lt;app-base&gt;&lt;/app-base&gt; </text>



<!-- Any embedded fonts defined here -->
<style type="text/css" ><![CDATA[

@font-face {
	font-family: ArialNovaCond-Bold_d;
	src: url("fonts/ArialNovaCond-Bold_d.woff") format("woff");
}

@font-face {
	font-family: ArialNova-Light_n;
	src: url("fonts/ArialNova-Light_n.woff") format("woff");
}

@font-face {
	font-family: Calibri-Light_r;
	src: url("fonts/Calibri-Light_r.woff") format("woff");
}

@font-face {
	font-family: Consolas_c7;
	src: url("fonts/Consolas_c7.woff") format("woff");
}

]]></style>

</svg>
